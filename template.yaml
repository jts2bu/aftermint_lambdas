AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  sam-app

  Sample SAM Template for sam-app

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 60
    Environment:
      Variables:
        DYNAMODB_HOST_URL: "http://dynamodb-local-aftermint:8000"

Resources:
  CommunitiesFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
      Properties:
        CodeUri: CommunitiesFunction/
        Handler: handler.lambda_handler
        Runtime: python3.9
        Architectures:
          - x86_64
        Events:
          Communities:
          Type: Api
          Properties:
            Path: /communities
            Method: get
          CommunityInfo:
            Type: Api
            Properties:
              Path: /communities/{community}
              Method: get
  PostsFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
      Properties:
        CodeUri: PostsFunction/
        Handler: handler.lambda_handler
        Runtime: python3.9
        Architectures:
          - x86_64
        Events:
          GetPosts:
            Type: Api
            Properties:
              Path: /communities/{community}/posts
              Method: get
          CreateNewPost:
            Type: Api
            Properties:
              Path: /communities/{community}/posts
              Method: post
    
  RewardsFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
      Properties:
        CodeUri: RewardsFunction/
        Handler: handler.lambda_handler
        Runtime: python3.9
        Architectures:
          - x86_64
        Events:
          GetRewards:
            Type: Api
            Properties:
              Path: /communities/{community}/rewards
              Method: get
          CreateNewReward:
            Type: Api
            Properties:
              Path: /communities/{community}/rewards
              Method: post
          GetRewardInfo:
            Type: Api
            Properties:
              Path: /communities/{community}/rewards/{rewardId}
              Method: get
          RewardSubmitEntry:
            Type: Api
            Properties:
              Path: /communities/{community}/rewards/{rewardId}/submit
              Method: post
  SessionsFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
      Properties:
        CodeUri: SessionsFunction/
        Handler: handler.lambda_handler
        Runtime: python3.9
        Architectures:
          - x86_64
        Events:
          Login:
            Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
            Properties:
              Path: /login
              Method: post
          Logout:
            Type: Api
            Properties:
              Path: /logout
              Method: post
  AftermintLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: aftermint-layer
      Description: Dependecies for Aftermint lambdas
      ContentUri: AftermintLayer/
      CompatibleRuntimes:
        - python3.9
      RetentionPolicy: Retain


Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  AftermintAPI:
    Description: "API Gateway endpoint URL for Prod stage for Hello World function"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/hello/"
  AftermintFunction:
    Description: "Hello World Lambda Function ARN"
    Value: !GetAtt AftermintFunction.Arn
  AftermintFunctionIamRole:
    Description: "Implicit IAM Role created for Hello World function"
    Value: !GetAtt AftermintFunctionRole.Arn
